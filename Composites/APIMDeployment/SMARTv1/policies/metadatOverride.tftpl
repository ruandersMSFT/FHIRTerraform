<policies>
    <inbound>
        <base />
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
        <set-header name="Content-Type" exists-action="override">
            <value>application/fhir+json</value>
        </set-header>
        <choose>
            <when condition="@(context.Response.StatusCode == 200)">
                <set-body>@{
                    // Get response body and flag the oauth URLs as SMART compatible
                    var responseBody = context.Response.Body.As<JObject>();
                    responseBody["rest"][0]["security"]["extension"][0]["url"] = "http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris";

                    // Set Metadata
                    responseBody["url"] = $"https://{context.Request.OriginalUrl.Host}/smart/metadata";

                    // Replace OAuth security with SMART security service
                    responseBody["rest"][0]["security"]["service"][0]["coding"][0]["code"] = "SMART-on-FHIR";

                    // Reroute SMART OAuth Urls
                    responseBody["rest"][0]["security"]["extension"][0]["extension"][0]["url"] = "token";
                    responseBody["rest"][0]["security"]["extension"][0]["extension"][0]["valueUri"] = $"https://{context.Request.OriginalUrl.Host}/auth/token";
                    responseBody["rest"][0]["security"]["extension"][0]["extension"][1]["url"] = "authorize";
                    responseBody["rest"][0]["security"]["extension"][0]["extension"][1]["valueUri"] = $"https://{context.Request.OriginalUrl.Host}/auth/authorize";

                    // Add the token revocation URL
                    var revoke = new JObject(
                        new JProperty("valueUri", "revoke"),
                        new JProperty("url", "https://graph.microsoft.com/{version}/users/{userobject_id}/invalidateAllRefreshToken")
                    );

                    responseBody["rest"][0]["security"]["extension"][0]["extension"][1].AddAfterSelf(revoke);

                    // Add bulk data
                    string instantiatesJson = @"[
                        'http://hl7.org/fhir/us/core/CapabilityStatement/us-core-server',
                        'http://hl7.org/fhir/uv/bulkdata/CapabilityStatement/bulk-data'
                    ]";
                    responseBody["instantiates"] = JArray.Parse(instantiatesJson);

                    var group = responseBody["rest"][0].SelectToken("$.resource[?(@.type=='Group')]");
                    group["operation"] = JToken.Parse("[{'name':'export','definition':'http://hl7.org/fhir/uv/bulkdata/OperationDefinition/group-export'}]");

                    return responseBody.ToString();
                }</set-body>
            </when>
        </choose>
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>
